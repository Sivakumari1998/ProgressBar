{
	"id": "com.demo.gauge",
	"version": "1.0.0",
	"name": "Demo Gauge",
	"description": "A gauge demo",
	"newInstancePrefix": "Gauge",
	"icon": "Insert Icon URL",
	"vendor": "Demo",
	"eula": "EULA",
	"license": "1.0",
	"webcomponents": [
		{
			"kind": "main",
			"tag": "com-demo-gauge",
			"url": "insert main js file url",
			"integrity": "",
			"ignoreIntegrity": true
		},
		{
			"kind": "styling",
			"tag": "com-demo-gauge-sps",
			"url": "insert styling js file url",
			"integrity": "",
			"ignoreIntegrity": true
		},
		{
			"kind": "builder",
			"tag": "com-demo-box-bps",
			"url": "insert builder js file url",
			"integrity": "",
			"ignoreIntegrity": true
		}
	],
	"properties": {
		"value": {
			"type": "number",
			"description": "Actual value",
			"default": 0
		},
		"LowerLimitvalue": {
			"type": "number",
			"description": "Lower Limit value",
			"default": 0
		},
		"UpperLimitvalue": {
			"type": "number",
			"description": "Upper Limit value",
			"default": 0
		},
		"info": {
			"type": "string",
			"description": "Gauge info",
			"default": ""
		},
		"color": {
			"type": "string",
			"description": "Text Color info",
			"default": "#3498db"
		},
		"width": {
			"type": "integer",
			"default": 100
		},
		"height": {
			"type": "integer",
			"default": 100
		}
	},
	"methods": {
		"setValue": {
			"description": "Sets the value.",
			"parameters": [
				{
					"name": "newValue",
					"type": "number",
					"description": "Actual value"
				},
				{
					"name": "newLowerLimitValue",
					"type": "number",
					"description": "Lower Limit value"
				},
				{
					"name": "newUpperLimitValue",
					"type": "number",
					"description": "Upper Limit value"
				},
				{
					"name": "newInfo",
					"type": "string",
					"description": "Progress Bar Info info"
				},
				{
					"name": "newColor",
					"type": "string",
					"description": "Text Color info"
				}
			],
			"body": "this.value = newValue; this.LowerLimitvalue = newLowerLimitValue; this.UpperLimitvalue = newUpperLimitValue; this.info = newInfo; this.color = newColor;"
		},
		"getValue": {
			"returnType": "number",
			"description": "Returns the value.",
			"body": "return this.value;"
		}
	},
	"events": {
		"onClick": {
			"description": "Called when the user clicks the Box."
		}
	}
}

 
